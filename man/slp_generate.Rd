% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slp_generate.R
\name{slp_generate}
\alias{slp_generate}
\title{Generate a Standard Load Profile}
\source{
\url{https://www.bdew.de/energie/standardlastprofile-strom/}

\url{https://www.bdew.de/media/documents/1999_Repraesentative-VDEW-Lastprofile.pdf}

\url{https://www.bdew.de/media/documents/2000131_Anwendung-repraesentativen_Lastprofile-Step-by-step.pdf}
}
\usage{
slp_generate(profile_id = "H0", start_date, end_date, state_code = NULL)
}
\arguments{
\item{profile_id}{load profile identifier, see 'Details'.}

\item{start_date}{start date in ISO 8601 format, required}

\item{end_date}{end date in ISO 8601 format, required}

\item{state_code}{identifier for one of 16 German states, see 'Details', optional}
}
\value{
A data.frame with four variables:
\itemize{
\item \code{profile_id}, character, load profile identifier
\item \code{start_time}, POSIXct / POSIXlt, start time
\item \code{end_time}, POSIXct / POSIXlt, end time
\item \code{watts}, numeric, electric power
}
}
\description{
Generate a standard load profile, normalized to an annual
consumption of 1,000 kWh
}
\details{
For every day there are 96 x 1/4h measurements of electrical power for
each combination of \code{profile_id}, \code{period} and \code{day}. For each profile
identifier the measurements were normalized so that they correspond to an
annual consumption of 1,000 kWh. So if we sum up all the quarter-hourly
consumption values for one year, the result is (approximately) 1,000 kWh/a,
see 'Examples' and call \code{vignette("algorithm-step-by-step")} for more information.

In total there are 11 representative, standard load profiles for 3 different
customer groups:
\itemize{
\item households: \code{H0}
\item commercial: \code{G0}, \code{G1}, \code{G2}, \code{G3}, \code{G4}, \code{G5}, \code{G6}
\item agriculture: \code{L0}, \code{L1}, \code{L2}
}

Call \code{\link[=slp_info]{slp_info()}} to for more information and examples.

Definition of periods:
\itemize{
\item \code{summer}: May 15 to September 14
\item \code{winter}: November 1 to March 20
\item \code{transition}: March 21 to May 14, and September 15 to October 31
}

Definition of characteristic days:
\itemize{
\item \code{saturday}: Saturdays; Dec 24th and Dec 31th are considered a Saturday too,
if they are not a Sunday
\item \code{sunday}: Sundays and all public holidays
\item \code{workday}: Monday to Friday
}

\strong{Note}: The package supports nationwide, public holidays for Germany. Those
were retrieved from the \href{https://github.com/nager/Nager.Date}{nager.Date API}.
The optional argument \code{state_code} can take one of the following  ISO 3166-2
state codes:
\itemize{
\item \code{DE-BB}: Brandenburg
\item \code{DE-BE}: Berlin
\item \code{DE-BW}: Baden-WÃ¼rttemberg
\item \code{DE-BY}: Bavaria
\item \code{DE-HB}: Bremen
\item \code{DE-HE}: Hesse
\item \code{DE-HH}: Hamburg
\item \code{DE-MV}: Mecklenburg-Vorpommern
\item \code{DE-NI}: Lower-Saxony
\item \code{DE-NW}: North Rhine-Westphalia
\item \code{DE-RP}: Rhineland-Palatinate
\item \code{DE-SH}: Schleswig-Holstein
\item \code{DE-SL}: Saarland
\item \code{DE-SN}: Saxony
\item \code{DE-ST}: Saxony-Anhalt
\item \code{DE-TH}: Thuringia
}

You can retrieve a dataset called \code{german_states} to get all 16 state codes
and their respective name in German and English.

\code{start_date} must be greater or equal to "1990-01-01", \code{end_date} must be smaller
or equal to "2073-12-31". This is because public holidays in Germany would
be ambitious before the reunification in 1990 (think of the state of Berlin),
and 2073 is the highest year supported by the \href{https://github.com/nager/Nager.Date}{nager.Date API}.
}
\examples{
today <- Sys.Date()
L <- slp_generate(c("L0", "L1", "L2"), today, today + 1)
head(L)

# you can supply one of 16 states, with or without "DE-" prefix
slp_generate("H0", "2024-01-01", "2024-12-31", state = "BE")
slp_generate("H0", "2024-01-01", "2024-12-31", state = "DE-BE")
slp_generate("H0", "2024-01-01", "2024-12-31", state_code = "de-be") # all Berlin

# if no state code is provided then only nationwide public holidays are considered
slp_generate("H0", "2024-01-01", "2024-12-31")

# Electric power values are normalized to an annual consumption of 1,000 kWh
H0_2024 <- slp_generate("H0", "2024-01-01", "2024-12-31")
sum(H0_2024$watts / 4 / 1000)
}
